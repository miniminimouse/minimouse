/* lgd_censored.sas – fits TOBIT, censored-gamma, beta regression */
%macro lgd_censored(
      train= ,
      oot= ,
      depvar= ,
      indep= ,
      datevar=def_date,
      models=TOBIT CG BR,
      outbase=lgd_out
   );

   %let eps = 1e-6;

   /* clean predictor list */
   %let clean_indep=;
   %do _i=1 %to %sysfunc(countw(&indep));
      %let v=%scan(&indep,&_i);
      %if %index(%upcase(&clean_indep),%upcase(&v))=0 %then
         %let clean_indep=&clean_indep &v;
   %end;
   %let clean_indep=%sysfunc(compbl(&clean_indep));

   /* stack data */
   data _cmb;
      length sample $6;
      set &train(in=a) &oot(in=b);
      sample=ifc(a,'TRAIN','OOT');
      if missing(&depvar) or &depvar<0 or &depvar>1 then delete;
      if nmiss(of &clean_indep) then delete;
   run;

   /* vif check (train only) */
   proc reg data=_cmb(where=(sample='TRAIN')) noprint;
      model &depvar=&clean_indep / vif;
   run; quit;

   /* setup output shells */
   data &outbase._pred &outbase._metrics &outbase._compare; stop; run;

   %let nmod=%sysfunc(countw(&models));
   %do _m=1 %to &nmod;
      %let mdl=%upcase(%scan(&models,&_m));

      /* jitter for beta */
      data _work;
         set _cmb;
         %if &mdl=BR %then %do;
            if &depvar=0 then &depvar=&eps;
            else if &depvar=1 then &depvar=1-&eps;
         %end;
      run;

      %if &mdl=TOBIT %then %do;
         proc qlim data=_work;
            model &depvar=&clean_indep;
            endogenous &depvar ~ censored(lb=0 ub=1);
            output out=_pred predicted=pred_lgd;
         run;
      %end;
      %else %if &mdl=CG %then %do;
         proc nlmixed data=_work tech=newrap qpoints=1 maxiter=300;
            parms beta0=0 %do j=1 %to %sysfunc(countw(&clean_indep)); b&j=0 %end; logalpha=0;
            eta=beta0
            %do j=1 %to %sysfunc(countw(&clean_indep)); +b&j*%scan(&clean_indep,&j) %end; ;
            mu=exp(eta); alpha=exp(logalpha); scale=mu/alpha;
            if &depvar<=&eps then ll=log(cdf('gamma',&eps,alpha,scale));
            else if &depvar>=1-&eps then ll=log(1-cdf('gamma',1-&eps,alpha,scale));
            else ll=log(pdf('gamma',&depvar,alpha,scale));
            model &depvar ~ general(ll);
            predict mu out=_pred(rename=(pred=pred_lgd));
         run;
      %end;
      %else %if &mdl=BR %then %do;
         proc nlmixed data=_work tech=newrap qpoints=1 maxiter=300;
            parms beta0=0 %do j=1 %to %sysfunc(countw(&clean_indep)); b&j=0 %end; logphi=0;
            eta=beta0
            %do j=1 %to %sysfunc(countw(&clean_indep)); +b&j*%scan(&clean_indep,&j) %end; ;
            mu=1/(1+exp(-eta)); phi=exp(logphi);
            ll=lgamma(phi)-lgamma(mu*phi)-lgamma((1-mu)*phi)
               +(mu*phi-1)*log(&depvar)+((1-mu)*phi-1)*log(1-&depvar);
            model &depvar ~ general(ll);
            predict mu out=_pred(rename=(pred=pred_lgd));
         run;
      %end;

      /* merge preds with keys */
      proc sql;
         create table _pred2 as
         select a.sample,a.&datevar,a.&depvar,b.pred_lgd,"&mdl" as model
         from _work(drop=&depvar) a
         left join _pred b
         on a._n_=b._n_;
      quit;

      data _pred2;
         set _pred2;
         residual=&depvar-pred_lgd;
         abs_residual=abs(residual);
      run;

      /* metrics */
      proc sql;
         create table _met as
         select "&mdl" as model,length(sample)=length(sample),
                sample,
                count(*) as n_obs,
                mean(residual) as bias format=8.4,
                sqrt(mean(residual*residual)) as rmse format=8.4,
                mean(abs_residual) as mae format=8.4
         from _pred2
         group by sample;
      quit;

      proc corr data=_pred2 noprint outp=_c(where=(_type_='CORR'));
         by sample;
         var &depvar pred_lgd;
      run;

      data _c;
         set _c;
         if _name_="&depvar";
         rename pred_lgd=correlation;
         keep sample correlation;
      run;

      proc sql;
         create table _met2 as
         select a.*,coalesce(b.correlation,.) as correlation format=8.4
         from _met a left join _c b using(sample);
      quit;

      /* date-level means */
      proc means data=_pred2 nway noprint;
         class &datevar sample;
         var &depvar pred_lgd;
         output out=_avg mean(&depvar)=actual_lgd mean(pred_lgd)=pred_lgd;
      run;

      data _avg; set _avg; model="&mdl"; run;

      /* append */
      proc append base=&outbase._pred    data=_pred2 force; run;
      proc append base=&outbase._metrics data=_met2  force; run;
      proc append base=&outbase._compare data=_avg   force; run;

      /* quick plot */
      ods graphics / reset width=12in height=8in;
      proc sgplot data=_avg;
         series x=&datevar y=actual_lgd / group=sample;
         series x=&datevar y=pred_lgd   / group=sample lineattrs=(pattern=dash);
         refline '30APR2020'd / axis=x lineattrs=(pattern=dash);
         xaxis label="default date"; yaxis label="lgd" min=0 max=1;
         keylegend / position=topright;
         title "&mdl – train vs oot";
      run;

   %end;

   proc print data=&outbase._metrics noobs;
      var model sample n_obs bias rmse mae correlation;
   run;

   proc datasets lib=work nolist;
      delete _:; quit;
%mend lgd_censored;
